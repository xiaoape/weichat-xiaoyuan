<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.bookmate.mapper.ClassicMapper" >

  <resultMap id="BaseResultMap" type="org.bookmate.entities.Classic">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="index" jdbcType="INTEGER" property="index" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="image" jdbcType="VARCHAR" property="image" />
    <result column="fav_nums" jdbcType="INTEGER" property="favNums" />
    <result column="like_status" jdbcType="INTEGER" property="likeStatus" />
    <result column="pubdate" jdbcType="DATE" property="pubdate" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="zhaiyao" jdbcType="VARCHAR" property="zhaiyao" />
  </resultMap>
  <sql id="Base_Column_List">
    id, content, `index`, title, image, fav_nums, like_status, pubdate, `type`, author, 
    zhaiyao
  </sql>
  <select id="selectById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from classic
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="selectByIndex" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from classic
    where `index` = #{`index`,jdbcType=INTEGER}
  </select>
  
  <select id="getClassicLatest"  resultMap="BaseResultMap">
    select * from classic where `index`=(select max(`index`) from classic)
  </select>
  
  <select id="getNextClassic"  parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select * from classic where `index`= #{`index`,jdbcType=INTEGER}
  </select>
  
  <select id="getPreviousClassic"  parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select * from classic where `index`= #{`index`,jdbcType=INTEGER}
  </select>
  
  <select id="getLoveClassics"   resultMap="BaseResultMap">
    select * from classic where like_status = 1
  </select>
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from classic
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <update id="updateById" parameterType="org.bookmate.entities.Classic">
    update classic
    <set>
       <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="index != null">
        `index` = #{index,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="favNums != null">
        fav_nums = #{favNums,jdbcType=INTEGER},
      </if>
      <if test="likeStatus != null">
        like_status = #{likeStatus,jdbcType=INTEGER},
      </if>
      <if test="pubdate != null">
        pubdate = #{pubdate,jdbcType=DATE},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=INTEGER},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="zhaiyao != null">
        zhaiyao = #{zhaiyao,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.bookmate.entities.Classic">
    update classic
    set content = #{content,jdbcType=VARCHAR},
      `index` = #{index,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      image = #{image,jdbcType=VARCHAR},
      fav_nums = #{favNums,jdbcType=INTEGER},
      like_status = #{likeStatus,jdbcType=INTEGER},
      pubdate = #{pubdate,jdbcType=DATE},
      `type` = #{type,jdbcType=INTEGER},
      author = #{author,jdbcType=VARCHAR},
      zhaiyao = #{zhaiyao,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>